/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 29 03:51:57 GMT 2018
 */

package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.IllegalFormatConversionException;
import java.util.IllegalFormatWidthException;
import java.util.MissingFormatArgumentException;
import java.util.UnknownFormatConversionException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.parser.ParseError;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ParseError_ESTest extends ParseError_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ParseError parseError0 = new ParseError(0, (String) null);
      int int0 = parseError0.getPosition();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      ParseError parseError0 = new ParseError(1228, "", objectArray0);
      int int0 = parseError0.getPosition();
      assertEquals(1228, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ParseError parseError0 = new ParseError((-2347), "H");
      parseError0.getErrorMessage();
      assertEquals((-2347), parseError0.getPosition());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ParseError parseError0 = new ParseError((-336), "");
      parseError0.getErrorMessage();
      assertEquals((-336), parseError0.getPosition());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Object[] objectArray0 = new Object[5];
      ParseError parseError0 = null;
      try {
        parseError0 = new ParseError(4, "kp1[i%<G", objectArray0);
        fail("Expecting exception: MissingFormatArgumentException");
      
      } catch(MissingFormatArgumentException e) {
         //
         // Format specifier '%<G'
         //
         verifyException("java.util.Formatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Object[] objectArray0 = new Object[3];
      ParseError parseError0 = null;
      try {
        parseError0 = new ParseError(3049, "6^#UKBUE7x~J$%2nT=v", objectArray0);
        fail("Expecting exception: IllegalFormatWidthException");
      
      } catch(IllegalFormatWidthException e) {
         //
         // 2
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) "FnvZ%xUX('Ol{";
      ParseError parseError0 = null;
      try {
        parseError0 = new ParseError(0, "FnvZ%xUX('Ol{", objectArray0);
        fail("Expecting exception: IllegalFormatConversionException");
      
      } catch(IllegalFormatConversionException e) {
         //
         // x != java.lang.String
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Object[] objectArray0 = new Object[3];
      ParseError parseError0 = null;
      try {
        parseError0 = new ParseError(0, (String) null, objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ParseError parseError0 = new ParseError(5196, "", (Object[]) null);
      String string0 = parseError0.toString();
      assertEquals("5196: ", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Object[] objectArray0 = new Object[2];
      ParseError parseError0 = null;
      try {
        parseError0 = new ParseError(0, ".T%U&O", objectArray0);
        fail("Expecting exception: UnknownFormatConversionException");
      
      } catch(UnknownFormatConversionException e) {
         //
         // Conversion = 'U'
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ParseError parseError0 = new ParseError((-70), (String) null);
      parseError0.getErrorMessage();
      assertEquals((-70), parseError0.getPosition());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ParseError parseError0 = new ParseError((-70), (String) null);
      int int0 = parseError0.getPosition();
      assertEquals((-70), int0);
  }
}
