/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 29 15:48:28 GMT 2018
 */

package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.Reader;
import java.io.StringReader;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.Node;
import org.jsoup.parser.HtmlTreeBuilder;
import org.jsoup.parser.ParseErrorList;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Parser;
import org.jsoup.parser.TreeBuilder;
import org.jsoup.parser.XmlTreeBuilder;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Parser_ESTest extends Parser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Parser parser1 = parser0.setTrackErrors((-1));
      assertFalse(parser1.isTrackErrors());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = new Parser(htmlTreeBuilder0);
      Document document0 = parser0.parseInput("n", "n");
      List<Node> list0 = parser0.parseFragmentInput("uVH<L", document0, "n");
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = Parser.unescapeEntities("org.jsoup.parser.Parser", false);
      assertEquals("org.jsoup.parser.Parser", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = Parser.unescapeEntities("", true);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Parser parser1 = parser0.setTrackErrors(1);
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      parser1.settings(parseSettings0);
      assertTrue(parser0.isTrackErrors());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Parser parser1 = parser0.settings((ParseSettings) null);
      ParseSettings parseSettings0 = parser1.settings();
      assertNull(parseSettings0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Parser parser1 = parser0.setTrackErrors(1);
      XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
      parser1.setTreeBuilder(xmlTreeBuilder0);
      assertTrue(parser0.isTrackErrors());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("", "");
      assertEquals("#document", document0.nodeName());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      StringReader stringReader0 = new StringReader("");
      Document document0 = parser0.parseInput((Reader) stringReader0, "");
      assertEquals(0, document0.siblingIndex());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      StringReader stringReader0 = new StringReader("org.jsoup.parser.Parser");
      Document document0 = parser0.parseInput((Reader) stringReader0, "org.jsoup.parser.Parser");
      assertEquals("org.jsoup.parser.Parser", document0.location());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      // Undeclared exception!
      try { 
        parser0.setTreeBuilder((TreeBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        Parser.parseXmlFragment((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        Parser.parseXmlFragment("R*`Ivdr:%*)|1wU/", (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // BaseURI must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      // Undeclared exception!
      try { 
        parser0.parseInput((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      // Undeclared exception!
      try { 
        parser0.parseInput(",", (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // BaseURI must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = Parser.parse("", "");
      // Undeclared exception!
      try { 
        parser0.parseFragmentInput("", document0, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // BaseURI must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = Parser.parse("", "");
      ParseErrorList parseErrorList0 = parser0.getErrors();
      // Undeclared exception!
      try { 
        Parser.parseFragment((String) null, (Element) document0, "E?<0", parseErrorList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("^uB{", "yzH&");
      ParseErrorList parseErrorList0 = new ParseErrorList(106, 106);
      // Undeclared exception!
      try { 
        Parser.parseFragment("7WmG!GSv0B)w", (Element) document0, (String) null, parseErrorList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // BaseURI must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      // Undeclared exception!
      try { 
        Parser.parseFragment((String) null, (Element) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try { 
        Parser.parseBodyFragmentRelaxed((String) null, ">5){G=O/;![");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      // Undeclared exception!
      try { 
        Parser.parseBodyFragmentRelaxed("", (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // BaseURI must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      // Undeclared exception!
      try { 
        Parser.parseBodyFragment((String) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      // Undeclared exception!
      try { 
        Parser.parseBodyFragment("org.jsoup.parser.Parser", (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      // Undeclared exception!
      try { 
        Parser.parse((String) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      // Undeclared exception!
      try { 
        Parser.parse("", (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // BaseURI must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Parser parser0 = null;
      try {
        parser0 = new Parser((TreeBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      ParseSettings parseSettings0 = parser0.settings();
      assertNotNull(parseSettings0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "R*`Ivdr:%*)|1wU/");
      List<Node> list0 = Parser.parseFragment("", (Element) document0, "R*`Ivdr:%*)|1wU/");
      assertEquals("R*`Ivdr:%*)|1wU/", document0.location());
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
      Parser parser0 = new Parser(xmlTreeBuilder0);
      Parser parser1 = parser0.setTrackErrors(0);
      assertFalse(parser1.isTrackErrors());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      assertFalse(parser0.isTrackErrors());
      
      parser0.setTrackErrors(1433);
      boolean boolean0 = parser0.isTrackErrors();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
      Parser parser0 = new Parser(xmlTreeBuilder0);
      boolean boolean0 = parser0.isTrackErrors();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      HtmlTreeBuilder htmlTreeBuilder0 = (HtmlTreeBuilder)parser0.getTreeBuilder();
      assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("JEk0K5QBz^?~]7v/", "");
      // Undeclared exception!
      try { 
        Parser.parseFragment("%N{5;0f>0J ", (Element) document0, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // BaseURI must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      List<Node> list0 = Parser.parseXmlFragment("?KO?Pw3z=", "");
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("#8eT0lGW$.\u0007$'pdj", "#8eT0lGW$.\u0007$'pdj");
      List<Node> list0 = Parser.parseFragment("#8eT0lGW$.\u0007$'pdj", (Element) document0, "#8eT0lGW$.\u0007$'pdj", (ParseErrorList) null);
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser1 = parser0.setTreeBuilder(htmlTreeBuilder0);
      assertFalse(parser1.isTrackErrors());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      // Undeclared exception!
      try { 
        Parser.unescapeEntities((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = Document.createShell(":");
      // Undeclared exception!
      try { 
        parser0.parseFragmentInput((String) null, document0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      PipedWriter pipedWriter0 = new PipedWriter();
      PipedReader pipedReader0 = new PipedReader(pipedWriter0, 100);
      // Undeclared exception!
      try { 
        parser0.parseInput((Reader) pipedReader0, "org.jsoup.UncheckedIOException");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Must be true
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }
}
