/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 28 23:02:35 GMT 2018
 */

package tutorial;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import tutorial.ATMCard;
import tutorial.BankAccount;
import tutorial.Company;
import tutorial.CurrentAccount;
import tutorial.Owner;
import tutorial.Person;
import tutorial.SavingsAccount;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ATMCard_ESTest extends ATMCard_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Person person0 = new Person("tutorial.ATMCard", "");
      SavingsAccount savingsAccount0 = new SavingsAccount(person0);
      ATMCard aTMCard0 = new ATMCard(person0, savingsAccount0, (int[]) null);
      aTMCard0.getPin();
      assertTrue(aTMCard0.isEnabled());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Person person0 = new Person("tutorial.ATMCard", "tutorial.ATMCard");
      SavingsAccount savingsAccount0 = new SavingsAccount(person0);
      int[] intArray0 = new int[0];
      ATMCard aTMCard0 = new ATMCard(person0, savingsAccount0, intArray0);
      aTMCard0.getPin();
      assertTrue(aTMCard0.isEnabled());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SavingsAccount savingsAccount0 = new SavingsAccount((Owner) null);
      int[] intArray0 = new int[1];
      ATMCard aTMCard0 = new ATMCard((Owner) null, savingsAccount0, intArray0);
      aTMCard0.getOwner();
      assertTrue(aTMCard0.isEnabled());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Company company0 = new Company("NP9ViVR7RlLBH");
      int[] intArray0 = new int[0];
      ATMCard aTMCard0 = new ATMCard(company0, (BankAccount) null, intArray0);
      aTMCard0.getAccount();
      assertTrue(aTMCard0.isEnabled());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Person person0 = new Person("", "");
      CurrentAccount currentAccount0 = new CurrentAccount(person0, 0);
      currentAccount0.balance = 2436;
      ATMCard aTMCard0 = new ATMCard(person0, currentAccount0, (int[]) null);
      aTMCard0.getAccount();
      assertTrue(aTMCard0.isEnabled());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CurrentAccount currentAccount0 = new CurrentAccount((Owner) null, (-1));
      int[] intArray0 = new int[2];
      ATMCard aTMCard0 = new ATMCard((Owner) null, currentAccount0, intArray0);
      currentAccount0.deposit((-1));
      aTMCard0.getAccount();
      assertTrue(aTMCard0.isEnabled());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Company company0 = new Company("~6u@4I<@G0U");
      CurrentAccount currentAccount0 = new CurrentAccount(company0, 172);
      int[] intArray0 = new int[7];
      ATMCard aTMCard0 = new ATMCard(company0, currentAccount0, intArray0);
      aTMCard0.getOwner();
      assertTrue(aTMCard0.isEnabled());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Company company0 = new Company("~6u@4I<@G0U");
      CurrentAccount currentAccount0 = new CurrentAccount(company0, 172);
      int[] intArray0 = new int[7];
      ATMCard aTMCard0 = new ATMCard(company0, currentAccount0, intArray0);
      aTMCard0.getPin();
      assertTrue(aTMCard0.isEnabled());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Company company0 = new Company("~6u@4I<@G0U");
      CurrentAccount currentAccount0 = new CurrentAccount(company0, 172);
      int[] intArray0 = new int[7];
      ATMCard aTMCard0 = new ATMCard(company0, currentAccount0, intArray0);
      aTMCard0.setAccount(currentAccount0);
      assertTrue(aTMCard0.isEnabled());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Company company0 = new Company("~6u@4I<@G0U");
      CurrentAccount currentAccount0 = new CurrentAccount(company0, 172);
      int[] intArray0 = new int[7];
      ATMCard aTMCard0 = new ATMCard(company0, currentAccount0, intArray0);
      boolean boolean0 = aTMCard0.isEnabled();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Company company0 = new Company("~6u@4I<@G0U");
      CurrentAccount currentAccount0 = new CurrentAccount(company0, 172);
      int[] intArray0 = new int[7];
      ATMCard aTMCard0 = new ATMCard(company0, currentAccount0, intArray0);
      assertTrue(aTMCard0.isEnabled());
      
      aTMCard0.invalidate();
      boolean boolean0 = aTMCard0.isEnabled();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Company company0 = new Company("~6u@4I<@G0U");
      CurrentAccount currentAccount0 = new CurrentAccount(company0, 172);
      int[] intArray0 = new int[7];
      ATMCard aTMCard0 = new ATMCard(company0, currentAccount0, intArray0);
      aTMCard0.setPin(intArray0);
      assertTrue(aTMCard0.isEnabled());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Company company0 = new Company("~6u@4I<@G0U");
      CurrentAccount currentAccount0 = new CurrentAccount(company0, 172);
      int[] intArray0 = new int[7];
      ATMCard aTMCard0 = new ATMCard(company0, currentAccount0, intArray0);
      aTMCard0.setOwner(company0);
      assertTrue(aTMCard0.isEnabled());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Company company0 = new Company("~6u@4I<@G0U");
      CurrentAccount currentAccount0 = new CurrentAccount(company0, 172);
      int[] intArray0 = new int[7];
      ATMCard aTMCard0 = new ATMCard(company0, currentAccount0, intArray0);
      aTMCard0.getAccount();
      assertTrue(aTMCard0.isEnabled());
  }
}
